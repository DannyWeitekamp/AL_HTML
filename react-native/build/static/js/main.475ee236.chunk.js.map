{"version":3,"sources":["components/images/Arrowhead-01-128.png","components/images/Arrowhead-Down-01-128.png","components/panel.js","components/skill_panel.js","components/buttons.js","serviceWorker.js","state_machine.js","index.js"],"names":["module","exports","__webpack_require__","p","Panel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","icons","up","require","down","state","title","expanded","expandable","animation","Animated","Value","collapsedHeight","event","setState","maxHeight","nativeEvent","layout","height","minHeight","expandedHeight","Math","max","initialValue","finalValue","setValue","timing","toValue","duration","start","icon","react_default","a","createElement","View","style","styles","container","TouchableHighlight","underlayColor","onLayout","_setMinHeight","bind","onPress","toggle","titleContainer","Text","Image","buttonImage","source","body","_setMaxHeight","children","Component","StyleSheet","create","backgroundColor","margin","overflow","flexDirection","flex","padding","color","fontWeight","button","width","paddingTop","paddingBottom","colorItems","text","items","colors","forEach","item","i","map","t","_","splt","split","length","arr","sep","textShadowRadius","textShadowColor","toConsumableArray","e","reduce","b","concat","flat","skill_text_by_action","ButtonPressed","skill","UpdateTextField","match_text_by_action","match","sel","args","entries","acc","kv","push","replace","innerHTML","x","join","SkillPanel","s_skill_set","structure_skills","skill_set","select","starting_selection","selected_skill","selected_match","correctness_map","handleClickSkillItem","assertThisInitialized","handleClickCorrectnessButton","initial_select","first_key","keys","id_count","_loop","skills","key","index","fnc","rest","callback","evt","_rest","slicedToArray","selectSkill","console","log","select_callback","_rest2","label","match_id","new_label","new_correctness_map","objectSpread","was_empty","now_empty","service","send","correctness_callback","nextProps","s_keys","match_correctness","_this2","skillbox_styles","content","liststyles","skill_list","ScrollView","header","sectionHeader","skill_eq","action","where_colors","skill_elem","daisyChain","matches","mIndex","match_eq","correct","incorrect","match_container","correctness_button","correct_selected","String","fromCharCode","incorrect_selected","filter","skill_info","showsVerticalScrollIndicator","panel","how","where","JSON","stringify","when","which","display","borderRadius","borderWidth","borderColor","flexBasis","flexWrap","paddingLeft","paddingRight","fontSize","borderBottomWidth","textAlign","justifySelf","textIndent","defaultProps","query_text","Buttons","current","action_str","callbacks","button_wrapper1","prompt1","next_button","next_button_text","startstate_button","startstate_button_text","Query_Demonstrate","button_wrapper2","prompt2","yes_no","yes_button","yes_button_text","no_button","no_button_text","submit_button","submit_button_text","debugmode","button_wrapper3","nools_button","nools_callback","nools_button_text","bottom","defineProperty","alignItems","flexShrink","marginTop","position","prompt_text","Boolean","window","location","hostname","ButtonsMachine","Machine","initial","states","Specify_Start_State","on","START_STATE_SET","DEMONSTRATE","DONE","Waiting_For_Applicable_Skills","entry","APPLICABLE_SKILLS_RECIEVED","NO_SKILLS_RECIEVED","No_Query_Feedback","SKILL_PANEL_FEEDBACK_NONEMPTY","Query_Yes_No_Feedback","YES_PRESSED","NO_PRESSED","Query_Submit_Feedback","SKILL_PANEL_FEEDBACK_EMPTY","target","SUBMIT_SKILL_FEEDBACK","Request_Foci","FOCI_DONE","Explantions_Displayed","NEXT_PRESSED","actions","query_apprentice","context","setSkillWindowState","arguments","undefined","ReactDOM","render","skill_panel","state_machine","state_machine_service","document","getElementById","setButtonsState","buttons","button_callbacks","initialState","interpret","onTransition","value","setButtonCallbacks","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.475ee236.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Arrowhead-01-128.3fbf838f.png\";","module.exports = __webpack_public_path__ + \"static/media/Arrowhead-Down-01-128.912d4e8d.png\";","import React, { Component } from 'react'\nimport {StyleSheet,Text,View,Image,TouchableHighlight,Animated} from 'react-native'; //Step 1\n\nclass Panel extends Component{\n    constructor(props){\n        super(props);\n\n        this.icons = {     //Step 2\n            'up'    : require('./images/Arrowhead-01-128.png'),\n            'down'  : require('./images/Arrowhead-Down-01-128.png')\n        };\n\n        this.state = {       //Step 3\n            title       : props.title,\n            expanded    : false,\n            expandable  : true,\n            animation   : new Animated.Value(props.collapsedHeight)\n        };\n    }\n\n    _setMaxHeight(event){\n        // console.log(\"maxheight\",event.nativeEvent.layout.height)\n        this.setState({\n            maxHeight   : event.nativeEvent.layout.height,\n            expandable  : event.nativeEvent.layout.height > this.props.collapsedHeight\n        });\n\n    }\n\n    _setMinHeight(event){\n        \n        // console.log(\"minheight\",minHeight,this.props.collapsedHeight)\n        this.setState({\n            minHeight   : event.nativeEvent.layout.height\n        });\n    }\n\n    toggle(){\n        //Step 1\n        // let initialValue, finalValue\n\n        let expandedHeight = Math.max(this.state.maxHeight + this.state.minHeight,this.props.collapsedHeight);\n        let collapsedHeight = Math.max(this.state.minHeight,this.props.collapsedHeight);\n        \n        let initialValue    = this.state.expanded? expandedHeight:collapsedHeight,\n            finalValue      = this.state.expanded? collapsedHeight:expandedHeight;\n        // console.log(finalValue)\n        this.setState({\n            expanded : !this.state.expanded  //Step 2\n        });\n\n        this.state.animation.setValue(initialValue);  //Step 3\n        Animated.timing(     //Step 4\n            this.state.animation,\n            {\n                toValue: finalValue,\n                duration: 50\n            }\n        ).start();  //Step 5\n    }\n\n\n    render(){\n        let icon = this.icons['down'];\n\n        if(this.state.expanded){\n            icon = this.icons['up'];   //Step 4\n        }\n\n        //Step 5\n        return ( \n            <Animated.View\n                style={[styles.container,{height: this.state.animation}]}>\n                <TouchableHighlight \n                    underlayColor=\"#f1f1f1\"\n                    onLayout={this._setMinHeight.bind(this)}\n                    onPress={this.state.expandable ? this.toggle.bind(this):null}> \n                    <View style={styles.titleContainer}>\n                        \n                        <Text style={styles.title}> {this.props.title} </Text> \n\n                    { this.state.expandable &&\n                        <Image\n                            style={styles.buttonImage}\n                            source={icon}\n                        ></Image>\n                    }\n                        \n                    </View>\n                </TouchableHighlight>\n                \n                <View style={styles.body} onLayout={this._setMaxHeight.bind(this)}> \n                    {this.props.children}\n                </View>\n\n            </Animated.View>\n        );\n    }\n}\n\n\nvar styles = StyleSheet.create({\n    container   : {\n        backgroundColor: '#fff',\n        margin:2,\n        overflow:'hidden'\n    },\n    titleContainer : {\n        flexDirection: 'row'\n    },\n    title       : {\n        flex    : 1,\n        padding : 2,\n        color   :'#2a2f43',\n        fontWeight:'bold'\n    },\n    button      : {\n\n    },\n    buttonImage : {\n        width   : 30,\n        height  : 25\n    },\n    body        : {\n        padding     : 5,\n        paddingTop  : 0,\n        paddingBottom  : 20,\n\n    }\n});\n\nexport default Panel;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { TouchableHighlight,ScrollView,View, Text, StyleSheet } from \"react-native\";\nimport Panel from './panel.js'\n\n\n\nfunction cramBtw(arr,sep){\n  return [...arr].map((e, i) => i < arr.length - 1 ? [e, sep] : [e]).reduce((a, b) => a.concat(b))\n}\n\nfunction colorItems(text, items, colors){\n  text = [text]\n  // for(var item in colorMap) {\n  items.forEach(function(item,i) {\n    text = text.map((t,_) => {\n      if(typeof t == 'string'){\n        let splt = t.split(item)\n        if(splt.length > 1){\n         return cramBtw(splt,<Text style={\n            {\"color\":colors[i],'textShadowRadius':3, 'textShadowColor': colors[i]}}>{item}</Text>);\n         // return cramBtw(splt,<Text style={{\"color\":colorMap[item]}}>{item}</Text>);\n        }\n      }\n      return t;\n    }).flat();\n  });\n  return text;\n}\n\nconst skill_text_by_action ={\n  ButtonPressed: function(skill,colors) {\n    return \"Press Button\"\n  },\n  UpdateTextField: function(skill,colors) {\n    return skill['name'] || skill['how'];\n  }\n\n};\n\nconst match_text_by_action = {\n  UpdateTextField: function(match,colors) {\n    let sel = match['mapping']['?sel']\n    let args =  Object.entries(match['mapping']).reduce(\n      function (acc,kv) {if(kv[0] !== \"?sel\") {acc.push(kv[1])}return acc;},[]);\n    // console.log(sel,args)\n    sel = sel.replace(\"?ele-\",\"\")\n    args = args.map(x => x.replace(\"?ele-\",\"\"))\n    let innerHTML = /*String.fromCharCode(8226) +*/ \"(\" + args.join(\", \") + \"): \" + sel + \"->\" + (match['inputs'] && match['inputs']['value']);\n    innerHTML = colorItems(innerHTML,[sel].concat(args), colors); // innerHTML = cramBtw( innerHTML.split(\"A1\"),<Text style={{\"color\":\"red\"}}>A1</Text>);\n    return innerHTML;\n  },\n  ButtonPressed: function(match,colors) {\n    return \"Press: \" + match['mapping']['?sel'].replace(\"?ele-\",\"\");\n  }                          \n}\n\n\nclass SkillPanel extends Component{\n  constructor(props){\n        super(props);\n\n\n        this.s_skill_set = this.structure_skills(props.skill_set)\n        \n        var select = this.starting_selection();\n        // const selected_skill = 0;\n        this.state = {\n          selected_skill: select,\n          selected_match: select,\n          correctness_map:{},\n        };\n      this.handleClickSkillItem = this.handleClickSkillItem.bind(this)\n      this.handleClickCorrectnessButton = this.handleClickCorrectnessButton.bind(this)\n  }\n\n  starting_selection(){\n    if(this.props.initial_select == \"first\"){\n      let first_key = Object.keys(this.s_skill_set)[0];\n      return first_key==null ? null : this.s_skill_set[first_key][0];\n    }\n\n  }\n\n  structure_skills(skill_set){\n    const s_skill_set = {}\n    var id_count = 0;\n    for (var title in skill_set) {\n      let skills = {};\n\n      for (var i in skill_set[title]){\n        var skill = skill_set[title][i]\n        if(!(skill['how'] in skills)){\n          \n          skills[skill['how']] = skill;\n          skills[skill['how']]['matches'] = []\n          // delete skills[skill['how']][\"mapping\"]\n\n        }\n        skill['_id'] = id_count++;\n        skills[skill['how']]['matches'].push(skill);\n\n      // console.log(skills)\n      s_skill_set[title] = Object.keys(skills).map((key,index)=>skills[key]);\n      }\n\n    }\n    return s_skill_set\n    // console.log(skill_set)\n  }\n\t\n\n  selectSkill(skill,match){\n    if(!match){\n      match = skill\n    }\n    this.setState({selected_skill: skill,\n                    selected_match: match})     \n  }\n\n  daisyChain(fnc, rest,callback){\n    return (evt) => {fnc(evt,rest,callback)};\n  }\n  handleClickSkillItem(evt,rest,callback){\n    const [skill,match] = rest;\n    // console.log(title,index,match)\n    // this.selectSkill(this.props.skill_set[title][index],match)\n    this.selectSkill(skill,match)\n    console.log(this.props.select_callback)\n    if(this.props.select_callback){\n      this.props.select_callback(match || skill)   \n    }\n    if(callback){\n      callback(rest)\n    }\n    \n  }\n  handleClickCorrectnessButton(evt,rest){\n    const [skill,match,label] = rest;\n    // console.log(skill)\n    // console.log(match)\n    // console.log(label)\n    let match_id = match[\"_id\"];\n    // console.log(match[\"_id\"])\n    // console.log(this.state.correctness_map)\n    let new_label = (this.state.correctness_map[match_id]\n           && label === this.state.correctness_map[match_id]) ? null : label;\n    \n    let new_correctness_map = {...this.state.correctness_map};\n    if(new_label === null){\n      delete new_correctness_map[match_id];\n    }else{\n      new_correctness_map[match_id] = new_label;\n    }\n    \n    let was_empty = Object.keys(this.state.correctness_map).length === 0\n    let now_empty = Object.keys(new_correctness_map).length === 0\n    if(!was_empty && now_empty){\n      console.log(\"EMPTY\")\n      this.props.service.send(\"SKILL_PANEL_FEEDBACK_EMPTY\")\n    }else if(was_empty && !now_empty){\n      console.log(\"NOT EMPTY\")\n      this.props.service.send(\"SKILL_PANEL_FEEDBACK_NONEMPTY\")\n    }\n\n    this.setState({correctness_map : new_correctness_map});\n\n    console.log(new_correctness_map)\n\n    if(this.props.correctness_callback){\n      this.props.correctness_callback(match || skill,new_label)\n    }\n\n\n  }\n  componentWillReceiveProps(nextProps){\n    this.s_skill_set = this.structure_skills(nextProps.skill_set)\n    let s_keys = Object.keys(this.s_skill_set)\n    if(!this.state.selected_skill && s_keys.length > 0){\n      let select = this.s_skill_set[s_keys[0]][0]\n      this.setState({\n          selected_skill: select,\n          selected_match: select,\n          match_correctness: {},\n      })\n    }\n  }\n\n\n\trender(){\n    // console.log(this.s_skill_set)\n    // this.s_skill_set = this.structure_skills(this.props.skill_set)\n    \n    \n\n    // this.state = \n\t\treturn (\n\t\t    <View style={skillbox_styles.content}>\n\t\t      \n          <View style={liststyles.skill_list}>\n          <ScrollView>\n            {Object.keys(this.s_skill_set).map((title, index) => {\n              let header = <TouchableHighlight underlayColor=\"#fff\" >\n                 <Text style={liststyles.sectionHeader}>{title}</Text>\n              </TouchableHighlight> \n              // let itemStyle = liststyles.item;\n              let rest = this.s_skill_set[title].map((skill, index) => {\n                  const skill_eq = this.state.selected_skill && this.state.selected_skill['_id']===skill['_id'];\n                  // console.log(skill_eq)\n                  // console.log(\"IS\",itemStyle)\n                  // console.log(\"EQ\",eq, index, (eq ? itemStyle.selectColor : itemStyle.backgroundColor))\n                  let innerHTML = (skill_text_by_action[skill.action] || skill_text_by_action[\"UpdateTextField\"])(skill,this.props.where_colors)\n                  let skill_elem = <TouchableHighlight underlayColor=\"#f1f1f1\"\n                             onPress={ this.daisyChain(this.handleClickSkillItem,[skill],\n                                                       skill['callback']) } >\n                            <Text style={[liststyles.item, skill_eq && liststyles.selected_skill]} \n                            backgroundColor={\"#ff00ffff\"}>{\n                              innerHTML}</Text>\n                        </TouchableHighlight>\n                  let matches = [];\n                  if(\"matches\" in skill){\n                      // console.log(skill[\"matches\"])\n                      matches = skill[\"matches\"].map((match,mIndex) => {\n                        if('mapping' in match){\n                          const match_eq = this.state.selected_match && this.state.selected_match['_id']===match['_id'];\n                          \n                          // let sel = match['mapping']['?sel']\n                          // let args =  Object.entries(match['mapping']).reduce(\n                          //   function (acc,kv) {if(kv[0] != \"?sel\") {acc.push(kv[1])}return acc;},[]);\n                          // console.log(sel,args)\n                          // sel = sel.replace(\"?ele-\",\"\")\n                          // args = args.map(x => x.replace(\"?ele-\",\"\"))\n                          // let innerHTML = String.fromCharCode(8226) + \"(\" + args.join(\", \") + \"):\" + sel + \"->\" + (match['inputs'] && match['inputs']['value']);\n                          // innerHTML = colorItems(innerHTML,{\"B1\":'red',\"A1\":'green'}); // innerHTML = cramBtw( innerHTML.split(\"A1\"),<Text style={{\"color\":\"red\"}}>A1</Text>);\n                          // console.log(match_text_by_action,match.action)\n                          let innerHTML = (match_text_by_action[match.action] || match_text_by_action[\"UpdateTextField\"])(match,this.props.where_colors)\n                          let correct = this.state.correctness_map[match[\"_id\"]] === \"correct\";\n                          let incorrect = this.state.correctness_map[match[\"_id\"]] === \"incorrect\";\n                          // console.log(this.state.correctness_map)\n                          let match_view = <View style={liststyles.match_container}> \n\n                            <TouchableHighlight underlayColor=\"#919191\"  \n                            onPress = {this.daisyChain(this.handleClickCorrectnessButton,[skill,match,\"correct\"])}\n\n                                 // onPress={ this.daisyChain(this.handleClickSkillItem,[skill,match], \n                                                           // match['callback'])} >\n                                                           >\n                                <Text style={[liststyles.correctness_button, correct && liststyles.correct_selected]}>{\n                                  String.fromCharCode(10004)\n                                  // innerHTML\n                                  // String.fromCharCode(8226)+ \" \"+Object.values(match['mapping'] || {}).map(.join(\", \")\n                                }</Text>\n                            </TouchableHighlight>\n                            <TouchableHighlight underlayColor=\"#919191\"  \n                            onPress = {this.daisyChain(this.handleClickCorrectnessButton,[skill,match,\"incorrect\"])}\n                                 // onPress={ this.daisyChain(this.handleClickSkillItem,[skill,match], \n                                                           // match['callback'])} >\n                                                           >\n                                <Text style={[liststyles.correctness_button, incorrect && liststyles.incorrect_selected]}>{\n                                  String.fromCharCode(10006)\n                                  // innerHTML\n                                  // String.fromCharCode(8226)+ \" \"+Object.values(match['mapping'] || {}).map(.join(\", \")\n                                }</Text>\n                            </TouchableHighlight>\n\n                            \n                            <TouchableHighlight underlayColor=\"#919191\"\n                                  style={{'flex': 1}}\n                                 onPress={ this.daisyChain(this.handleClickSkillItem,[skill,match], \n                                                           match['callback'])} >\n                                <Text style={[liststyles.match,skill_eq && match_eq && liststyles.selected_match]}>{\n                                  innerHTML\n                                  // String.fromCharCode(8226)+ \" \"+Object.values(match['mapping'] || {}).map(.join(\", \")\n                                }</Text>\n                            </TouchableHighlight>\n                          </View>\n\n                          // let match_view = <View> {match_elem} </View>\n                          // console.log(typeof match_elem)\n                          return match_view;\n                        }else{\n                          return null;\n                        }\n                      })\n                  }\n                  matches = matches.filter(x => x != null); //remove undefinded\n                  return [skill_elem].concat(matches);\n                })\n              // console.log(title)\n              // console.log(header)\n              // console.log(rest)\n              return [header].concat(rest)\n              })\n            }\n          </ScrollView>\n\n            \n\n          </View>\n\n          \n\t\t      <ScrollView style={liststyles.skill_info}\n\t\t                 showsVerticalScrollIndicator={true}\n\t\t                 \n\t\t                 // contentInset= {{top: 20, left: 20, bottom: 0, right: 20}}\n\t\t                 >\n\t\t        <Panel title=\"How\"\n\t\t        \t   collapsedHeight={this.props.collapsedHeight.how}>\n\t\t          <Text>{this.state.selected_skill && this.state.selected_skill.how}</Text>\n\t\t        </Panel>\n\t\t        <Panel title=\"Where\"\n\t\t        \t   collapsedHeight={this.props.collapsedHeight.where}>\n\t\t          <Text>{this.state.selected_skill && JSON.stringify(this.state.selected_skill.where, null, 2)}</Text>\n\t\t        </Panel>\n\t\t        <Panel title=\"When\"\n\t\t        \t   collapsedHeight={this.props.collapsedHeight.when}>\n\t\t          <Text>{this.state.selected_skill && this.state.selected_skill.when}</Text>\n\t\t        </Panel>\n\t\t        <Panel title=\"Which\"\n\t\t        \t   collapsedHeight={this.props.collapsedHeight.which}>\n\t\t          <Text>{this.state.selected_skill && this.state.selected_skill.which}</Text>\n\t\t        </Panel>\n\n\t\t      </ScrollView>\n          \n\n\n\n\n\t\t    </View>  \n\t\t  );\n\t}\n\n}\n\nconst skillbox_styles = StyleSheet.create({\n  content: {\n    \"display\": \"flex\",\n    \"height\" : \"100%\",\n    // \"flexDirection\":\"row-reverse\",\n    \"flexDirection\":\"row\",\n    \n    backgroundColor: \"#F5FCFF\",\n    \"width\":\"100%\",\n    borderRadius: 4,\n    borderWidth: 0.5,\n    borderColor: '#d6d7da',\n    \n  },\n});\n\nconst liststyles = StyleSheet.create({\n  skill_list: {\n   flexBasis : 250,\n   paddingTop: 10,\n  },\n  skill_info: {\n   flex: 1,\n   paddingTop: 10,\n  },\n  sectionHeader: {\n    flexWrap: 'wrap',\n    paddingTop: 6,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 2,\n    fontSize: 15,\n    fontWeight: 'bold',\n    backgroundColor: \"'rgba(247,247,247,1.0)'\",\n  },\n  selected_skill:{\n    backgroundColor: \"#93e4ec\",\n  },\n  \n\n  item: {\n    flexWrap: 'wrap',\n    padding: 4,\n    paddingLeft: 6,\n    fontSize: 16,\n    borderBottomWidth: 1,\n    borderColor: 'gray',\n    backgroundColor: \"'rgba(247,0,0,0.0)'\",\n  },\n  correctness_button:{\n    fontSize: 20,\n    width:27,\n    textAlign:\"center\",\n    borderWidth:.1,\n    borderColor: 'lightgray',\n\n  },\n  incorrect_selected:{\n    // underlayColor:\"#00FF00\",\n    backgroundColor: \"red\",\n  },\n  correct_selected:{\n    backgroundColor: \"limegreen\",\n  },\n  match_container:{\n    display: 'flex',\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderColor: 'gray',\n\n  },\n  match: {\n    flex: 1,\n    flexWrap: 'wrap',\n    justifySelf: 'stretch',\n    padding: 3,\n    textIndent:5,\n    fontSize: 15,\n    backgroundColor: \"'rgba(252,252,252,1.0)'\",\n\n  },\n  selected_match:{\n    backgroundColor: \"#b3e8ff\",\n  },\n})\n\n// function no_op(){\n// \tvoid 0;\n// }\n\nSkillPanel.propTypes = {\n  collapsedHeight: PropTypes.object,\n  select_callback: PropTypes.func,\n}\n\nSkillPanel.defaultProps = {\n  collapsedHeight: {\"how\": 40,\n\t\t\t\t\t\"where\": 90,\n\t\t\t\t\t\"when\": 90,\n\t\t\t\t\t\"which\": 40,\n\t\t\t\t\t},\n   //\"darkorchid\", \"#feb201\",   \"#ff884d\", \"#52d0e0\", \"#e44161\",  \"#2f85ee\", \"#562ac6\", \"#cc24cc\"\n   where_colors: [  \"darkorchid\",  \"#ff884d\",  \"#52d0e0\", \"#feb201\",  \"#e44161\", \"#ed3eea\", \"#2f85ee\",  \"#562ac6\", \"#cc24cc\"],\n   select_callback: () => {}\n}\n\nexport default SkillPanel;\n\n\n\n            /*<ScrollView >\n            \n                <SectionList \n                  sections={this.props.sections}\n\n                  renderSectionHeader={({section}) =>\n                  <TouchableHighlight underlayColor=\"#f1f1f1\" >\n                   <Text style={liststyles.sectionHeader}>{section.title}</Text>\n                  </TouchableHighlight>\n                  }\n                  renderItem={({item}) => \n                  <TouchableHighlight underlayColor=\"#f1f1f1\"\n                    onPress={this.props.clicky_callback}>\n                   <Text style={liststyles.item}>{item}</Text>\n                  </TouchableHighlight>\n                  }\n\n                  keyExtractor={(item, index) => index}\n                />\n            \n            </ScrollView>*/","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { TouchableHighlight,ScrollView,View, Text, StyleSheet } from \"react-native\";\nimport Panel from './panel.js'\n\n\n// import { useMachine } from '@xstate/react';\n\n\nvar text_by_mode = {\"choose_foci\": \"Select any interface elements that were used to compute this result.\",\n                    \"set_start\": \"Set the start state.\",\n                    \"press_next\": \"Press next to continue.\",\n                    \"demonstrate\" : \"Demonstrate the next step.\"\n                    }\n\n// function gen_query_text(){\n//   let h = <Text style={{\"color\":\"darkorchid\",'textShadowRadius':3, 'textShadowColor': \"darkorchid\"}}>{\"highlighted\"}</Text>\n//   return [\"Or specify if the \", h ,\" input is correct for the next step.\"]\n// }\nvar h = <Text style={{\"color\":\"darkorchid\",'textShadowRadius':3, 'textShadowColor': \"darkorchid\"}}>{\"highlighted\"}</Text>\nvar query_text = [\"Or specify if the \", h ,\" input is correct for the next step.\"]\n\n\nclass Buttons extends Component{\n  constructor(props){\n        super(props);\n        \n        // props.mode = \"feedback\"\n        // props.yes_no = false\n        // props.current\n  }\n\n  // componentDidMount() {\n  //   this.service.start();\n  // }\n\n  // componentWillUnmount() {\n  //   this.service.stop();\n  // }\n\n\n\trender(){ \n    const current = this.props.current;\n    console.log(current)\n    const matches = (x) => current.matches ? current.matches(x) : x == \"Specify_Start_State\";\n    const send  = (action_str) => {\n      console.log(action_str)\n      console.log(this.props.callbacks)\n      if(this.props.callbacks && action_str in this.props.callbacks){\n        this.props.callbacks[action_str]();\n      }\n      this.props.service.send(action_str);\n    }\n    // console.log(send)\n\n\n\t\treturn (\n          <View style={styles.container}>\n            <View style={styles.button_wrapper1}>\n              <Text style={styles.prompt1}> \n              {matches(\"Specify_Start_State\") &&\n               \"Set the start state.\"}\n              {matches(\"Query_Demonstrate\") &&\n               \"Demonstrate the next step.\"}\n              {matches(\"Explantions_Displayed\") &&\n               \"Press next to continue. Or demonstrate the next step.\"}\n              {matches(\"Request_Foci\") &&\n               \"Select any interface elements that were used to compute this result.\"}\n              \n              </Text>\n\n              {matches(\"Request_Foci\") &&\n              <TouchableHighlight style={styles.next_button} underlayColor=\"#CCCCCC\"\n                                onPress={() => send('FOCI_DONE')}>\n               <Text style={styles.next_button_text}>{\"Next\"}</Text>\n              </TouchableHighlight>\n              } \n\n              {matches(\"Explantions_Displayed\") &&\n              <TouchableHighlight style={styles.next_button} underlayColor=\"#CCCCCC\"\n                                onPress={() => send('NEXT_PRESSED')}>\n               <Text style={styles.next_button_text}>{\"Next\"}</Text>\n              </TouchableHighlight>\n              }\n\n              {matches(\"Specify_Start_State\") &&\n              <TouchableHighlight style={styles.startstate_button} underlayColor=\"#CCCCCC\"\n                                onPress={ ()=> send(\"START_STATE_SET\")}>\n               <Text style={styles.startstate_button_text}>{\"Start State Done\"}</Text>\n              </TouchableHighlight>\n              }\n            </View>\n\n            \n            \n              \n              \n\n            {(matches({\"Query_Demonstrate\":\"Query_Yes_No_Feedback\"})\n             || matches({\"Query_Demonstrate\":\"Query_Submit_Feedback\"})) &&\n\n            <View style={styles.button_wrapper2}>\n              <Text style={styles.prompt2}> \n              {matches({\"Query_Demonstrate\":\"Query_Yes_No_Feedback\"}) && query_text}\n              {matches({\"Query_Demonstrate\":\"Query_Submit_Feedback\"}) &&\n                \"Or press submit to send the feedback from the skill panel.\"}\n              </Text>\n              {matches({\"Query_Demonstrate\":\"Query_Yes_No_Feedback\"}) &&\n              <View style={styles.yes_no}>\n                <TouchableHighlight style={styles.yes_button} underlayColor=\"#CCCCCC\" \n                                  onPress={() => send('YES_PRESSED')}>\n                 <Text style={styles.yes_button_text}>{\"YES\"}</Text>\n                </TouchableHighlight>\n                <TouchableHighlight style={styles.no_button} underlayColor=\"#CCCCCC\" \n                                  onPress={() => send('NO_PRESSED')}>\n                 <Text style={styles.no_button_text}>{\"NO\"}</Text>\n                </TouchableHighlight>\n              </View>\n              }\n              {matches({\"Query_Demonstrate\":\"Query_Submit_Feedback\"}) &&\n                <TouchableHighlight style={styles.submit_button} underlayColor=\"#CCCCCC\" \n                                  onPress={() => send('SUBMIT_SKILL_FEEDBACK')}>\n                 <Text style={styles.submit_button_text}>{\"Submit\"}</Text>\n                </TouchableHighlight>\n              }\n            \n            </View>\n            }\n            \n            \n\n            \n            {!this.props.debugmode && \n            <View style={styles.button_wrapper3}>\n              <TouchableHighlight style={styles.nools_button} underlayColor=\"#CCCCCC\" \n                                  onPress={this.props.nools_callback}>\n               <Text style={styles.nools_button_text}>{\"Generate Nools\"}</Text>\n              </TouchableHighlight>\n            </View>\n            }\n\n            {this.props.debugmode && \n            <View style={styles.button_wrapper3}>\n              <View style={{display:'absolute',bottom:0,flexDirection:\"row\"}}>\n                <TouchableHighlight style={[styles.yes_button,{height:20}]} underlayColor=\"#CCCCCC\"\n                      onPress={() => send('DEMONSTRATE')}>\n                     <Text style={{fontSize : 10}}>{\"Demonstrate\"}</Text>\n                </TouchableHighlight>\n                <TouchableHighlight style={[styles.yes_button,{height:20}]} underlayColor=\"#CCCCCC\" onPress={ ()=>{}}\n                      onPress={() => send('DONE')}>\n                     <Text style={{fontSize : 10}}>{\"Done\"}</Text>\n                </TouchableHighlight>\n                <TouchableHighlight style={[styles.yes_button,{height:20}]} underlayColor=\"#CCCCCC\" onPress={ ()=>{}}\n                      onPress={() => send('APPLICABLE_SKILLS_RECIEVED')}>\n                     <Text style={{fontSize : 10}}>{\"Req recieved\"}</Text>\n                </TouchableHighlight>                \n              </View>\n            </View>\n          }\n        </View>\n\n        \n\n\t\t  );\n\t}\n\n}\n\nconst styles = StyleSheet.create({\n\n  \"container\": {\n    display: \"flex\",\n    \"height\" : \"100%\",\n  },\n\n  \"prompt1\" : {\n    fontSize: 20,\n    \"textAlign\":\"center\",\n    margin : 5,\n  },\n\n  \"prompt2\" : {\n    fontSize: 20,\n    \"textAlign\":\"center\",\n    margin : 5,\n  },\n\n  \"button_wrapper1\":{\n    display:\"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    flexBasis : \"40%\",\n    // \"pointerEvents\": \"none\",\n\n  },\n\n  \"button_wrapper2\":{\n    display:\"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    // flexBasis : \"40%\",\n    flexShrink: 1,\n    // \"pointerEvents\": \"none\",\n\n  },\n\n  \"button_wrapper3\":{\n    display:\"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    // flexBasis : \"20%\",\n    marginTop: \"auto\",\n    justifySelf: \"flex-end\",\n    // \"pointerEvents\": \"none\",\n\n  },\n\n  \"yes_no\":{\n\n    display:\"flex\",\n    flexDirection: \"row\",\n    // justifyContent: \"space-between\"\n    // marginVertical: 10\n\n  },\n\n  \"nools_button\" : {\n    position: \"absolute\",\n    bottom: 5,\n    padding: 5,\n    // \"top\":100,\n    \"width\":200,\n    \"backgroundColor\": \"#999999\",\n    // justifySelf: \"bottom\",\n    borderRadius: 5,\n    \n  },\n\n  \"nools_button_text\" : {\n    \"fontSize\":18,\n    \"textAlign\":\"center\",\n\n  },\n\n  \"startstate_button\" : {\n    \"position\": \"relative\",\n    \"width\":200,\n    \"fontSize\":18,\n    \"backgroundColor\": \"#4CAF50\",\n     borderRadius: 5,\n     padding: 5,\n    // \"pointerEvents\": auto;\n  },\n  \"startstate_button_text\" : {\n    \"fontSize\":20,\n    \"textAlign\":\"center\",\n  },\n\n  \"yes_button\" :{\n    \"width\":80,\n    \"backgroundColor\": \"#4CAF50\",\n    borderRadius: 6,\n    margin: 8,\n    padding: 4,\n    // \"pointerEvents\": auto;\n  },\n  \"yes_button_text\" : {\n    \"fontSize\":30,\n    \"textAlign\":\"center\",\n  },\n\n   \"no_button\" :{\n    \"width\":80,\n    \"backgroundColor\": \"#f44336\",\n    borderRadius: 6,\n    margin: 8,\n    padding: 4,\n    // \"pointerEvents\": auto;\n  },\n\n  \"no_button_text\" : {\n    \"fontSize\":30,\n    \"textAlign\":\"center\",\n  },\n\n  \"next_button\" : {\n    // display: \"relative\",\n    // bottom: 0,\n    width:100,\n    backgroundColor: \"#4CAFFF\",\n    borderRadius: 6,\n    margin: 10,\n    padding: 5,\n    // \"pointerEvents\": auto;\n  },\n\n  \"next_button_text\" : {\n    \"fontSize\":35,\n    \"textAlign\":\"center\",\n  },\n\n  \"submit_button\" : {\n    // display: \"relative\",\n    // bottom: 0,\n    width:150,\n    backgroundColor: \"#4CAFFF\",\n    borderRadius: 6,\n    margin: 10,\n    padding: 5,\n    // \"pointerEvents\": auto;\n  },\n\n  \"submit_button_text\" : {\n    \"fontSize\":30,\n    \"textAlign\":\"center\",\n  },\n\n  \"prompt_text\" :{\n    /*display:flex;*/\n    \"textAlign\":\"center\",\n    \"fontSize\":25,\n\n  }, \n\n});\n\n\nexport default Buttons;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Machine } from 'xstate';\n\nconst feedbackStates = {\n\tinitial: \"Waiting_For_Applicable_Skills\",\n\tstates: {\n\t\t\"Waiting_For_Applicable_Skills\" :{\n\t\t\tentry : ['query_apprentice'],\n\t\t\ton : {\n\t\t\t\t\"APPLICABLE_SKILLS_RECIEVED\" : \"Query_Yes_No_Feedback\",\n\t\t\t\t\"NO_SKILLS_RECIEVED\" : \"No_Query_Feedback\"\n\t\t\t}\n\t\t},\n\t\t\"No_Query_Feedback\" : {\n\t\t\ton : {\n\t\t\t\t\"SKILL_PANEL_FEEDBACK_NONEMPTY\" : \"Query_Submit_Feedback\"\n\t\t\t}\n\t\t},\n\t\t\"Query_Yes_No_Feedback\" : {\n\t\t\ton : {\n\t\t\t\t\"SKILL_PANEL_FEEDBACK_NONEMPTY\" : \"Query_Submit_Feedback\",\n\t\t\t\t\"YES_PRESSED\" : \"Waiting_For_Applicable_Skills\",\n\t\t\t\t\"NO_PRESSED\" : \"Waiting_For_Applicable_Skills\",\n\t\t\t}\t\n\t\t},\n\t\t\"Query_Submit_Feedback\" : {\n\t\t\ton : {\n\t\t\t\t\"SKILL_PANEL_FEEDBACK_EMPTY\" : [\n\t\t\t\t\t{target : \"Query_Yes_No_Feedback\", },\n\t\t\t\t\t{target : \"No_Query_Feedback\"}\n\t\t\t\t],\n\t\t\t\t\"SUBMIT_SKILL_FEEDBACK\": \"Waiting_For_Applicable_Skills\"\n\t\t\t}\t\n\t\t}\n\t}\n}\n\nconst ButtonsMachine = Machine({\n  \"initial\": \"Specify_Start_State\",\n  \"states\": {\n  \t\"Specify_Start_State\": {\n  \t\ton: { \"START_STATE_SET\": \"Query_Demonstrate\" },\n  \t},\t\n    \"Query_Demonstrate\": {\n      on: { \"DEMONSTRATE\": \"Request_Foci\",\n       \t\t\"DONE\": \"Specify_Start_State\" },\n      \n      ...feedbackStates\n    },\n    \"Request_Foci\": {\n      on: {\n        \"FOCI_DONE\": \"Explantions_Displayed\",\n      },\n    },\n    \"Explantions_Displayed\": {\n      on: {\n        \"NEXT_PRESSED\": \"Query_Demonstrate\",\n        \"DEMONSTRATE\": \"Request_Foci\",\n        \"DONE\": \"Specify_Start_State\"\n      },\n      \n    },\n  }\n},\n{\n\tactions: {\n\t\tquery_apprentice : (context,event) => {\n\t\t\twindow.query_apprentice()\n\t\t}\n\t}\n}\n)\n\nexport default ButtonsMachine;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SkillPanel from './components/skill_panel';\nimport Buttons from './components/buttons';\nimport * as serviceWorker from './serviceWorker';\nimport ButtonsMachine from './state_machine.js'\nimport { interpret } from 'xstate';\n\n\n\n// function setSkillWindowState(evt){\n\n// }\nwindow.state_machine = ButtonsMachine.initialState\nwindow.state_machine_service = interpret(ButtonsMachine)\nwindow.state_machine_service.start()\n\n\n// const state = {\n//   current: \n// };\nwindow.state_machine_service.onTransition(current => {\n\tconsole.log(\"current.value\")\n\tconsole.log(current.value)\n\tsetButtonsState(current,window.debugmode)\n  \n  // this.setState({ current : current })\n  }\n);\n\n// function setButtonCallbacks(callbacks){\n// window.button_callbacks = callbacks\n// }\n// window.setButtonCallbacks = setButtonCallbacks\n\n// function setNoolsCallback(callback){\n// \twindow.nools_callback = callback\n// }\n// window.setNoolsCallback = setNoolsCallback\n\n\nfunction setSkillWindowState(skill_set, select_callback,\n\t\t\t\t\t\t\t correctness_callback, initial_select=null,\n\t\t\t\t\t\t\t where_colors=null){\n\tReactDOM.render(<SkillPanel skill_set={skill_set}\n\t\t\t\t\t\t\t\tselect_callback={select_callback}\n\t\t\t\t\t\t\t\tcorrectness_callback={correctness_callback}\n\t\t\t\t\t\t\t\tinitial_select={initial_select}\n\t\t\t\t\t\t\t\twhere_colors={where_colors || undefined}\n\t\t\t\t\t\t\t\tcurrent = {window.state_machine}\n\t\t\t\t\t\t\t\tservice = {window.state_machine_service}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t/>, document.getElementById('skill_panel'));\t\n}\n\n\nfunction setButtonsState(current,debugmode=false){\n\twindow.state_machine = current;\n\tReactDOM.render(<Buttons current={current}\n\t\t\t\t\t service={window.state_machine_service}\n\t\t\t\t\t debugmode={debugmode}\n\t\t\t\t\t callbacks={window.button_callbacks}\n\t\t\t\t\t nools_callback={window.nools_callback}/>,\n\t document.getElementById('buttons'));\t\n}\n\nwindow.setSkillWindowState = setSkillWindowState\nwindow.setButtonCallbacks = setSkillWindowState\nwindow.setButtonsState = setButtonsState\n\n// function render(){\n// let sections = [\n// \t              {title: 'D', data: ['Devin the long named fool']},\n// \t              {title: 'J', data: ['Jackson', 'James', 'Jillian', 'Jimmy', 'Joel', 'John', 'Julie']},\n// \t              {title: 'B', data: ['Backson', 'Bames', 'Billian', 'Bimmy', 'Boel', 'Bohn', 'Bulie']},\n// \t            ];\n\n\nlet test_skills = {\"explanations\": [\n\t\t\t\t\n\t\t\t\t{\"name\" : \"E0 + E1\",\n\t\t\t\t \"how\": \"E0 + E1\",\n\t\t\t\t \"where\": {\"A\":{\"B\":1}},\n\t\t\t\t \"when\": \"WHEN PART\",\n\t\t\t\t \"which\": 7.0,\n\t\t\t\t 'mapping': {\"?sel\": 'A1', \"?arg0\": 'B1',\"?arg1\": 'C1'}\n\t\t\t\t},\n\t\t\t\t{\"name\" : \"E0 + E1\",\n\t\t\t\t \"how\": \"E0 + E1\",\n\t\t\t\t \"where\": \"WHERE PART\",\n\t\t\t\t \"when\": \"WHEN PART\",\n\t\t\t\t \"which\": 7.0,\n\t\t\t\t 'mapping': {\"?sel\": 'A2', \"?arg0\": 'B2',\"?arg1\": 'C2'}\n\t\t\t\t},\n\t\t\t\t{\"name\": \"(E0 + E1) // 10\",\n\t\t\t\t \"how\": \"(E0 + E1) // 10\",\n\t\t\t\t \"where\": \"WHERE PART\",\n\t\t\t\t \"when\": \"WHEN PART\",\n\t\t\t\t \"which\": 4.0,\n\t\t\t\t 'mapping': {\"?sel\": 'A1', \"?arg0\": 'B1',\"?arg1\": 'C1'}\n\n\t\t\t\t},\n\t\t\t\t{\"name\": \"(E0 + E1) // 10\",\n\t\t\t\t \"how\": \"(E0 + E1) // 10\",\n\t\t\t\t \"where\": \"WHERE PART\",\n\t\t\t\t \"when\": \"WHEN PART\",\n\t\t\t\t \"which\": 4.0,\n\t\t\t\t 'mapping': {\"?sel\": 'A2', \"?arg0\": 'B2',\"?arg1\": 'C2'}\n\t\t\t\t}\n\t\t\t ],\n\t\t\t \"other skills\": [\n\t\t \t\t{\"name\": \"(E0 + E1) // 10\",\n\t\t\t\t \"how\": \"E0 + E1 + E2\",\n\t\t\t\t \"where\": \"WHERE PART (E0 + E1 + E2)\",\n\t\t\t\t \"when\": \"WHEN PART (E0 + E1 + E2)\",\n\t\t\t\t \"which\": 3.0,\n\t\t\t\t},\n\t\t\t\t{\"name\": \"(E0 + E1 + E2) // 10\",\n\t\t\t\t \"how\": \"E0 + E1\",\n\t\t\t\t \"where\": \"WHERE PART ((E0 + E1 + E2) // 10)\",\n\t\t\t\t \"when\": \"WHEN PART ((E0 + E1 + E2) // 10)\",\n\t\t\t\t \"which\": 8.0,\n\t\t\t\t},\n\t\t\t ]\n\n\n\t\t\t};\n// setSkillWindowState({\"skills:\": []});\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n\twindow.debugmode = true;\n\twindow.query_apprentice = () => {};\n\tsetButtonsState(window.state_machine,true)\n\tsetSkillWindowState(test_skills);\n}else{\n\twindow.debugmode = false\n}\n// setButtonsState(\"press_next\",true,true);\n\n// }\n// document.getElementById('render_button').addEventListener(\"click\",render)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}